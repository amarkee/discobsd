PARAM = -DEXPLORER16
PARAM += -DPIC32MX7
PARAM += -DUART2_ENABLED
PARAM += -DSPI1_ENABLED
PARAM += -DSD_ENABLED
PARAM += -DGPIO_ENABLED
PARAM += -DGPIO1_ENABLED
PARAM += -DGPIO2_ENABLED
PARAM += -DGPIO3_ENABLED
PARAM += -DGPIO4_ENABLED
PARAM += -DGPIO5_ENABLED
PARAM += -DGPIO6_ENABLED
PARAM += -DADC_ENABLED
PARAM += -DPWM_ENABLED
PARAM += -DLED_SWAP_PORT=TRISA -DLED_SWAP_PIN=3
PARAM += -DLED_TTY_PORT=TRISA -DLED_TTY_PIN=2
PARAM += -DLED_KERNEL_PORT=TRISA -DLED_KERNEL_PIN=1
PARAM += -DLED_DISK_PORT=TRISA -DLED_DISK_PIN=0
PARAM += -DSD_MHZ=10
PARAM += -DCONS_MINOR=1
PARAM += -DCONS_MAJOR=UART_MAJOR
PARAM += -DBUS_DIV=1
PARAM += -DBUS_KHZ=80000
PARAM += -DCPU_KHZ=80000
LDSCRIPT = "baremetal/script.ld"
#
# Makefile for RetroBSD, pic32 target
#
# DEBUG is set to -g by kconfig if debugging is requested (kconfig -g).
#
include ../gcc-config.mk

AS              = ${GCCPREFIX}-as ${DEBUG} -mips32r2 -EL
CC              = ${GCCPREFIX}-gcc
CPP             = ${GCCPREFIX}-cpp
LD              = ${GCCPREFIX}-gcc -mips32r2 -EL
LDFLAGS         = -nostdlib -T ../${LDSCRIPT} -Wl,-Map=$@.map -Wl,--gc-sections
SIZE            = ${GCCPREFIX}-size
OBJCOPY         = ${GCCPREFIX}-objcopy
OBJDUMP         = ${GCCPREFIX}-objdump

# sources are located via $S relative to the compilation directory
S               = ../..

DEPFLAGS	= -MT $@ -MP -MD -MF .deps/$*.dep
DEFS            = -I. ${PARAM} -DKERNEL $(DEPFLAGS)
CFLAGS          = ${DEBUG} -mips32r2 -EL -nostdinc -fno-builtin -Os ${DEFS} -Wall -ffunction-sections

# compile rules: rules are named COMPILE_${SUFFIX}
# SUFFIX is the file suffix, capitalized (e.g. C for a .c file).

COMPILE_C       = ${CC} -c ${CFLAGS} $<
COMPILE_S       = ${CC} -c ${DEFS} $<

OBJS = exec_aout.o exec_conf.o exec_elf.o exec_script.o exec_subr.o \
	init_main.o init_sysent.o kern_clock.o kern_descrip.o \
	kern_exec.o kern_exit.o kern_fork.o kern_mman.o kern_proc.o \
	kern_prot.o kern_prot2.o kern_resource.o kern_sig.o kern_sig2.o \
	kern_subr.o kern_synch.o kern_sysctl.o kern_time.o subr_prf.o \
	subr_rmap.o sys_generic.o sys_inode.o sys_pipe.o sys_process.o \
	syscalls.o tty.o tty_subr.o tty_tty.o ufs_alloc.o ufs_bio.o \
	ufs_bmap.o ufs_dsort.o ufs_fio.o ufs_inode.o ufs_mount.o \
	ufs_namei.o ufs_subr.o ufs_syscalls.o ufs_syscalls2.o \
	vfs_vnops.o vm_sched.o vm_swap.o vm_swp.o clock.o cons.o devsw.o \
	exception.o machdep.o mem.o signal.o swap.o sysctl.o adc.o \
	gpio.o pwm.o sd.o spi.o spi_bus.o uart.o 

CFILES = $S/kern/exec_aout.c $S/kern/exec_conf.c $S/kern/exec_elf.c \
	$S/kern/exec_script.c $S/kern/exec_subr.c $S/kern/init_main.c \
	$S/kern/init_sysent.c $S/kern/kern_clock.c \
	$S/kern/kern_descrip.c $S/kern/kern_exec.c $S/kern/kern_exit.c \
	$S/kern/kern_fork.c $S/kern/kern_mman.c $S/kern/kern_proc.c \
	$S/kern/kern_prot.c $S/kern/kern_prot2.c $S/kern/kern_resource.c \
	$S/kern/kern_sig.c $S/kern/kern_sig2.c $S/kern/kern_subr.c \
	$S/kern/kern_synch.c $S/kern/kern_sysctl.c $S/kern/kern_time.c \
	$S/kern/subr_prf.c $S/kern/subr_rmap.c $S/kern/sys_generic.c \
	$S/kern/sys_inode.c $S/kern/sys_pipe.c $S/kern/sys_process.c \
	$S/kern/syscalls.c $S/kern/tty.c $S/kern/tty_subr.c \
	$S/kern/tty_tty.c $S/kern/ufs_alloc.c $S/kern/ufs_bio.c \
	$S/kern/ufs_bmap.c $S/kern/ufs_dsort.c $S/kern/ufs_fio.c \
	$S/kern/ufs_inode.c $S/kern/ufs_mount.c $S/kern/ufs_namei.c \
	$S/kern/ufs_subr.c $S/kern/ufs_syscalls.c \
	$S/kern/ufs_syscalls2.c $S/kern/vfs_vnops.c $S/kern/vm_sched.c \
	$S/kern/vm_swap.c $S/kern/vm_swp.c $S/pic32/clock.c \
	$S/pic32/cons.c $S/pic32/devsw.c $S/pic32/exception.c \
	$S/pic32/machdep.c $S/pic32/mem.c $S/pic32/signal.c \
	$S/pic32/swap.c $S/pic32/sysctl.c $S/pic32/adc.c $S/pic32/gpio.c \
	$S/pic32/pwm.c $S/pic32/sd.c $S/pic32/spi.c $S/pic32/spi_bus.c \
	$S/pic32/uart.c swapunix.c 

DEVCFG!=if [ -f devcfg.c ] ; then \
		echo "devcfg.o" ; \
	else \
		echo "" ; \
	fi

# load lines for config "xxx" will be emitted as:
# xxx: ${SYSTEM_DEP} swapxxx.o
#	${SYSTEM_LD_HEAD}
#	${SYSTEM_LD} swapxxx.o
#	${SYSTEM_LD_TAIL}
SYSTEM_OBJ      = startup.o ${OBJS} ioconf.o ${DEVCFG}
SYSTEM_DEP      = Makefile ioconf.c machine sys .deps ${SYSTEM_OBJ}
SYSTEM_LD_HEAD  = sh ../newvers.sh > vers.c; ${CC} $(CFLAGS) -c vers.c; rm -f $@
SYSTEM_LD       = -@echo ${LD} ${LDFLAGS} '$${SYSTEM_OBJ}' vers.o -o $@; \
                  ${LD} ${LDFLAGS} ${SYSTEM_OBJ} vers.o -o $@
SYSTEM_LD_TAIL  = ${SIZE} $@; \
                  $(OBJCOPY) -O ihex --change-addresses=0x80000000 $@ $@.hex; \
                  $(OBJCOPY) -O binary -R .boot -R .config $@ $@.bin; \
                  $(OBJDUMP) -d -S $@ > $@.dis

unix: ${SYSTEM_DEP} swapunix.o
	${SYSTEM_LD_HEAD}
	${SYSTEM_LD} swapunix.o
	${SYSTEM_LD_TAIL}

swapunix.o: swapunix.c
	${COMPILE_C}

all: unix

clean:
	rm -rf .deps unix *.elf *.o *.map *.dis *.bin machine sys

clean-all: clean
	rm -f *.h *.hex ioconf.c swap*.c vers.c

reconfig ioconf.c: Config ../../../tools/kconfig/kconfig
	../../../tools/kconfig/kconfig Config
	$(MAKE) clean
	rm -f *.hex

load:   unix
	pic32prog unix.hex

machine:
	ln -s .. $@

sys:
	ln -s ../../include $@

.deps:
	mkdir .deps

startup.o: ../startup.S
	${COMPILE_S}

ioconf.o: ioconf.c
	${COMPILE_C}

exec_aout.o: $S/kern/exec_aout.c ioconf.o machine .deps sys
	${COMPILE_C}

exec_conf.o: $S/kern/exec_conf.c ioconf.o machine .deps sys
	${COMPILE_C}

exec_elf.o: $S/kern/exec_elf.c ioconf.o machine .deps sys
	${COMPILE_C}

exec_script.o: $S/kern/exec_script.c ioconf.o machine .deps sys
	${COMPILE_C}

exec_subr.o: $S/kern/exec_subr.c ioconf.o machine .deps sys
	${COMPILE_C}

init_main.o: $S/kern/init_main.c ioconf.o machine .deps sys
	${COMPILE_C}

init_sysent.o: $S/kern/init_sysent.c ioconf.o machine .deps sys
	${COMPILE_C}

kern_clock.o: $S/kern/kern_clock.c ioconf.o machine .deps sys
	${COMPILE_C}

kern_descrip.o: $S/kern/kern_descrip.c ioconf.o machine .deps sys
	${COMPILE_C}

kern_exec.o: $S/kern/kern_exec.c ioconf.o machine .deps sys
	${COMPILE_C}

kern_exit.o: $S/kern/kern_exit.c ioconf.o machine .deps sys
	${COMPILE_C}

kern_fork.o: $S/kern/kern_fork.c ioconf.o machine .deps sys
	${COMPILE_C}

kern_mman.o: $S/kern/kern_mman.c ioconf.o machine .deps sys
	${COMPILE_C}

kern_proc.o: $S/kern/kern_proc.c ioconf.o machine .deps sys
	${COMPILE_C}

kern_prot.o: $S/kern/kern_prot.c ioconf.o machine .deps sys
	${COMPILE_C}

kern_prot2.o: $S/kern/kern_prot2.c ioconf.o machine .deps sys
	${COMPILE_C}

kern_resource.o: $S/kern/kern_resource.c ioconf.o machine .deps sys
	${COMPILE_C}

kern_sig.o: $S/kern/kern_sig.c ioconf.o machine .deps sys
	${COMPILE_C}

kern_sig2.o: $S/kern/kern_sig2.c ioconf.o machine .deps sys
	${COMPILE_C}

kern_subr.o: $S/kern/kern_subr.c ioconf.o machine .deps sys
	${COMPILE_C}

kern_synch.o: $S/kern/kern_synch.c ioconf.o machine .deps sys
	${COMPILE_C}

kern_sysctl.o: $S/kern/kern_sysctl.c ioconf.o machine .deps sys
	${COMPILE_C}

kern_time.o: $S/kern/kern_time.c ioconf.o machine .deps sys
	${COMPILE_C}

subr_prf.o: $S/kern/subr_prf.c ioconf.o machine .deps sys
	${COMPILE_C}

subr_rmap.o: $S/kern/subr_rmap.c ioconf.o machine .deps sys
	${COMPILE_C}

sys_generic.o: $S/kern/sys_generic.c ioconf.o machine .deps sys
	${COMPILE_C}

sys_inode.o: $S/kern/sys_inode.c ioconf.o machine .deps sys
	${COMPILE_C}

sys_pipe.o: $S/kern/sys_pipe.c ioconf.o machine .deps sys
	${COMPILE_C}

sys_process.o: $S/kern/sys_process.c ioconf.o machine .deps sys
	${COMPILE_C}

syscalls.o: $S/kern/syscalls.c ioconf.o machine .deps sys
	${COMPILE_C}

tty.o: $S/kern/tty.c ioconf.o machine .deps sys
	${COMPILE_C}

tty_subr.o: $S/kern/tty_subr.c ioconf.o machine .deps sys
	${COMPILE_C}

tty_tty.o: $S/kern/tty_tty.c ioconf.o machine .deps sys
	${COMPILE_C}

ufs_alloc.o: $S/kern/ufs_alloc.c ioconf.o machine .deps sys
	${COMPILE_C}

ufs_bio.o: $S/kern/ufs_bio.c ioconf.o machine .deps sys
	${COMPILE_C}

ufs_bmap.o: $S/kern/ufs_bmap.c ioconf.o machine .deps sys
	${COMPILE_C}

ufs_dsort.o: $S/kern/ufs_dsort.c ioconf.o machine .deps sys
	${COMPILE_C}

ufs_fio.o: $S/kern/ufs_fio.c ioconf.o machine .deps sys
	${COMPILE_C}

ufs_inode.o: $S/kern/ufs_inode.c ioconf.o machine .deps sys
	${COMPILE_C}

ufs_mount.o: $S/kern/ufs_mount.c ioconf.o machine .deps sys
	${COMPILE_C}

ufs_namei.o: $S/kern/ufs_namei.c ioconf.o machine .deps sys
	${COMPILE_C}

ufs_subr.o: $S/kern/ufs_subr.c ioconf.o machine .deps sys
	${COMPILE_C}

ufs_syscalls.o: $S/kern/ufs_syscalls.c ioconf.o machine .deps sys
	${COMPILE_C}

ufs_syscalls2.o: $S/kern/ufs_syscalls2.c ioconf.o machine .deps sys
	${COMPILE_C}

vfs_vnops.o: $S/kern/vfs_vnops.c ioconf.o machine .deps sys
	${COMPILE_C}

vm_sched.o: $S/kern/vm_sched.c ioconf.o machine .deps sys
	${COMPILE_C}

vm_swap.o: $S/kern/vm_swap.c ioconf.o machine .deps sys
	${COMPILE_C}

vm_swp.o: $S/kern/vm_swp.c ioconf.o machine .deps sys
	${COMPILE_C}

clock.o: $S/pic32/clock.c ioconf.o machine .deps sys
	${COMPILE_C}

cons.o: $S/pic32/cons.c ioconf.o machine .deps sys
	${COMPILE_C}

devsw.o: $S/pic32/devsw.c ioconf.o machine .deps sys
	${COMPILE_C}

exception.o: $S/pic32/exception.c ioconf.o machine .deps sys
	${COMPILE_C}

machdep.o: $S/pic32/machdep.c ioconf.o machine .deps sys
	${COMPILE_C}

mem.o: $S/pic32/mem.c ioconf.o machine .deps sys
	${COMPILE_C}

signal.o: $S/pic32/signal.c ioconf.o machine .deps sys
	${COMPILE_C}

swap.o: $S/pic32/swap.c ioconf.o machine .deps sys
	${COMPILE_C}

sysctl.o: $S/pic32/sysctl.c ioconf.o machine .deps sys
	${COMPILE_C}

adc.o: $S/pic32/adc.c ioconf.o machine .deps sys
	${COMPILE_C}

gpio.o: $S/pic32/gpio.c ioconf.o machine .deps sys
	${COMPILE_C}

pwm.o: $S/pic32/pwm.c ioconf.o machine .deps sys
	${COMPILE_C}

sd.o: $S/pic32/sd.c ioconf.o machine .deps sys
	${COMPILE_C}

spi.o: $S/pic32/spi.c ioconf.o machine .deps sys
	${COMPILE_C}

spi_bus.o: $S/pic32/spi_bus.c ioconf.o machine .deps sys
	${COMPILE_C}

uart.o: $S/pic32/uart.c ioconf.o machine .deps sys
	${COMPILE_C}


-include .deps/*.dep
